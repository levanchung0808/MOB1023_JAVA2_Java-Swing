package ASMGDFinal;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class MAIN_QLNV extends javax.swing.JFrame implements Runnable {

    List<Employee> list = new ArrayList<Employee>();
    int index = 0;
    Timer timer;
    boolean check = true;
    String selectedImagePath = "D:\\FPT\\MOB1023_JAVA2\\MOB1023_PS19319_LeVanChung_ASMFINAL\\src\\image\\avatar.png";
    DefaultTableModel model;

    /**
     * Creates new form MAIN_QLNV
     */
    public MAIN_QLNV() {
        initComponents();

        //icon JFrame
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/manager.png")));

        //set nó chạy giữa màn hình
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        //CLOCK
        Thread thread = new Thread(this);
        thread.start();

        //set default image
        try {
            getSizeImage(selectedImagePath);
        } catch (Exception e) {
            System.out.println("Lỗi đường dẫn file default");
        }

        //edit JTable columns
        TableColumnModel columnModel = tblEmployee.getColumnModel();
        columnModel.getColumn(0).setMaxWidth(200);
        columnModel.getColumn(1).setPreferredWidth(10);
        columnModel.getColumn(2).setMaxWidth(200);
        columnModel.getColumn(3).setPreferredWidth(10);
        columnModel.getColumn(4).setMaxWidth(200);
        columnModel.getColumn(5).setPreferredWidth(10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitle = new javax.swing.JLabel();
        lbMaNhanVien = new javax.swing.JLabel();
        lbHoVaTen = new javax.swing.JLabel();
        lbTuoi = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        lbLuong = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        txtHoVaTen = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lbTime = new javax.swing.JLabel();
        btnGoFirst = new javax.swing.JButton();
        btnGoNext = new javax.swing.JButton();
        btnGoPrevious = new javax.swing.JButton();
        btnGoLast = new javax.swing.JButton();
        lbRecord = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        lbLuong1 = new javax.swing.JLabel();
        cbbSort = new javax.swing.JComboBox<>();
        btnSort = new javax.swing.JButton();
        lbImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ NHÂN VIÊN");

        lbTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(255, 0, 51));
        lbTitle.setText("QUẢN LÝ NHÂN VIÊN");

        lbMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbMaNhanVien.setForeground(new java.awt.Color(255, 0, 51));
        lbMaNhanVien.setText("MÃ NHÂN VIÊN");

        lbHoVaTen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbHoVaTen.setForeground(new java.awt.Color(255, 0, 51));
        lbHoVaTen.setText("HỌ VÀ TÊN");

        lbTuoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTuoi.setForeground(new java.awt.Color(255, 0, 51));
        lbTuoi.setText("TUỔI");

        lbEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbEmail.setForeground(new java.awt.Color(255, 0, 51));
        lbEmail.setText("EMAIL");

        lbLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbLuong.setForeground(new java.awt.Color(255, 0, 51));
        lbLuong.setText("LƯƠNG");

        txtMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtHoVaTen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtHoVaTen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtTuoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/open.png"))); // NOI18N
        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exit.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTime.setForeground(new java.awt.Color(255, 0, 51));
        lbTime.setText("TIME");

        btnGoFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/go-first.png"))); // NOI18N
        btnGoFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoFirstActionPerformed(evt);
            }
        });

        btnGoNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/go-next.png"))); // NOI18N
        btnGoNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoNextActionPerformed(evt);
            }
        });

        btnGoPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/go-previous.png"))); // NOI18N
        btnGoPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoPreviousActionPerformed(evt);
            }
        });

        btnGoLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/go-last.png"))); // NOI18N
        btnGoLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoLastActionPerformed(evt);
            }
        });

        lbRecord.setForeground(new java.awt.Color(255, 0, 51));
        lbRecord.setText("Record: 0");

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG", "Đường dẫn hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.setRowHeight(21);
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        lbLuong1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbLuong1.setForeground(new java.awt.Color(255, 0, 51));
        lbLuong1.setText("TÌM KIẾM");

        cbbSort.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã", "Họ và tên", "Lương" }));

        btnSort.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSort.setForeground(new java.awt.Color(255, 0, 51));
        btnSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sort-name-AZ.png"))); // NOI18N
        btnSort.setText("SORT");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        lbImage.setBackground(new java.awt.Color(204, 204, 204));
        lbImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImage.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        lbImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbLuong1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMaNhanVien)
                            .addComponent(lbTuoi)
                            .addComponent(lbEmail)
                            .addComponent(lbLuong)
                            .addComponent(lbHoVaTen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGoFirst)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGoNext)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGoPrevious)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGoLast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbRecord))
                            .addComponent(lbTitle)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addComponent(txtTuoi, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHoVaTen, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtLuong)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTime, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbTitle)
                        .addGap(16, 16, 16)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbMaNhanVien)
                                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbHoVaTen)
                                .addComponent(txtHoVaTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbTuoi)
                                .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbEmail)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbLuong)
                                .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnGoLast)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnGoFirst)
                                        .addComponent(btnGoNext)
                                        .addComponent(btnGoPrevious)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lbRecord)
                                    .addGap(14, 14, 14))))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbLuong1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        clear();
        btnSave.setText("Save");

        //auto setText
//        txtMaNhanVien.setText("PS000" + (list.size() + 1));
//        txtHoVaTen.setText("");
//        double rd = Math.random();
//        txtTuoi.setText(String.format("%.0f", rd * 20 + 16));
//        txtEmail.setText("@gmail.com");
//        txtLuong.setText(String.format("%.0f", rd * 30000000 + 5000000));
        //set avatar lại default
        selectedImagePath = "D:\\FPT\\MOB1023_JAVA2\\MOB1023_PS19319_LeVanChung_ASMFINAL\\src\\image\\avatar.png";
        getSizeImage(selectedImagePath);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (!validationForm()) {
            return;
        }

        if (btnSave.getText().equals("Save")) {
            if (CheckMa()) {
                return;
            }
            addEmployee();
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
        } else {
            updateEmployee();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            btnSave.setText("Save");
        }
        fillToTable();
        clear();
        updateStatusRecord();
        lbRecord.setText("Record: " + "0" + " of " + list.size());

        //lưu vào file
        XFile.writeObject("d:\\QLNV_ASM.dat", list);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        btnSave.setText("Update");
        showDetail();
        updateStatusRecord();
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int response = JOptionPane.showConfirmDialog(this, "Bạn muốn xoá nhân viên này?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                removeEmployee();
                fillToTable();
                btnNewActionPerformed(evt);
                updateStatusRecord();
                lbRecord.setText("Record: " + "0" + " of " + list.size());
                JOptionPane.showMessageDialog(this, "Xoá thành công!");
            } else {
                return;
            }
            //lưu vào file
            XFile.writeObject("d:\\QLNV_ASM.dat", list);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chưa dòng nào được chọn để xoá");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            System.exit(0);
            //lưu vào file
            XFile.writeObject("d:\\QLNV_ASM.dat", list);
            JOptionPane.showMessageDialog(this, "Dữ liệu đã tự động lưu");
        } else {
            return;
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnGoFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoFirstActionPerformed
        // TODO add your handling code here:
        try {
            index = 0;
            tblEmployee.setRowSelectionInterval(0, 0);
            Employee emp = list.get(index);
            txtMaNhanVien.setText(emp.maNv);
            txtHoVaTen.setText(emp.hoTen);
            txtTuoi.setText(emp.tuoi + "");
            txtEmail.setText(emp.email);
            txtLuong.setText(String.format("%.0f", emp.luong));
            selectedImagePath = emp.hinh;
            getSizeImage(selectedImagePath);
            btnSave.setText("Update");
            updateStatusRecord();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnGoFirstActionPerformed

    private void btnGoNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoNextActionPerformed
        // TODO add your handling code here:
        try {
            tblEmployee.setRowSelectionInterval(index + 1, index + 1);
            if (index < list.size()) {
                index++;
                showDetail();
                updateStatusRecord();
            }
            btnSave.setText("Update");

        } catch (Exception e) {
            System.out.println("Lỗi Next");
        }
    }//GEN-LAST:event_btnGoNextActionPerformed

    private void btnGoPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoPreviousActionPerformed
        // TODO add your handling code here:
        try {
            tblEmployee.setRowSelectionInterval(index - 1, index - 1);
            if (index > 0) {
                index--;
                showDetail();
                updateStatusRecord();
            }
            btnSave.setText("Update");
        } catch (Exception e) {
            System.out.println("Lỗi Previous");
        }
    }//GEN-LAST:event_btnGoPreviousActionPerformed

    private void btnGoLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoLastActionPerformed
        // TODO add your handling code here:
        try {
            index = list.size() - 1;
            tblEmployee.setRowSelectionInterval(list.size() - 1, list.size() - 1);
            Employee emp = list.get(list.size() - 1);
            txtMaNhanVien.setText(emp.maNv);
            txtHoVaTen.setText(emp.hoTen);
            txtTuoi.setText(emp.tuoi + "");
            txtEmail.setText(emp.email);
            txtLuong.setText(String.format("%.0f", emp.luong));
            selectedImagePath = emp.hinh;
            getSizeImage(selectedImagePath);
            btnSave.setText("Update");
            updateStatusRecord();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnGoLastActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        try {
            list = (List<Employee>) XFile.readObject("d:\\QLNV_ASM.dat");
            fillToTable();
        } catch (Exception e) {
            System.out.println("Chưa có dòng nào nên k open");
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        ArrayList<Employee> lstFind = new ArrayList<>();
        String str = txtTimKiem.getText();
        model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).maNv.contains(str)) {
                search(i, model);
            } else if (list.get(i).hoTen.contains(str)) {
                search(i, model);
            } else if (list.get(i).email.contains(str)) {
                search(i, model);
            }
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased


    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // TODO add your handling code here:
        if (cbbSort.getSelectedItem() == "Mã") {
            if (check) {
                SapXepTheoMaTangDan();
                check = false;
            } else {
                SapXepTheoMaTangDan();
                Collections.reverse(list);
                fillToTable();
                check = true;
            }
        } else if (cbbSort.getSelectedItem() == "Họ và tên") {
            if (check) {
                SapXepTheoTenTangDan();
                check = false;
            } else {
                SapXepTheoTenTangDan();
                Collections.reverse(list);
                fillToTable();
                check = true;
            }
        } else if (cbbSort.getSelectedItem() == "Lương") {
            if (check) {
                SapXepTheoLuongTangDan();
                check = false;
            } else {
                SapXepTheoLuongTangDan();
                Collections.reverse(list);
                fillToTable();
                check = true;
            }
        }
    }//GEN-LAST:event_btnSortActionPerformed

    private void lbImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbImageMouseClicked
        // TODO add your handling code here:
        JFileChooser browseImageFile = new JFileChooser();
        int showOpenDialoque = browseImageFile.showOpenDialog(null);
        if (showOpenDialoque == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            selectedImagePath = selectedImageFile.getAbsolutePath();
            System.out.println(selectedImagePath);
            getSizeImage(selectedImagePath);
        }
    }//GEN-LAST:event_lbImageMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAIN_QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAIN_QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAIN_QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAIN_QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MAIN_QLNV().setVisible(true);
            }
        });
    }

    private void search(int i, DefaultTableModel model) {
        Object[] row = new Object[]{list.get(i).maNv, list.get(i).hoTen, list.get(i).tuoi, list.get(i).email, list.get(i).luong, list.get(i).hinh};
        model.addRow(row);
    }

    private void clear() {
        txtMaNhanVien.setText("");
        txtHoVaTen.setText("");
        txtTuoi.setText("");
        txtEmail.setText("");
        txtLuong.setText("");
        txtMaNhanVien.requestFocus();
    }

    public void fillToTable() {
        model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);

        for (Employee emp : list) {
            Object[] row = new Object[]{emp.maNv, emp.hoTen, emp.tuoi, emp.email, String.format("%.0f", emp.luong), emp.hinh};
            model.addRow(row);
        }
    }

    private void showDetail() {
        try {
            int i = checkIdgetPosition((String) tblEmployee.getModel().getValueAt(tblEmployee.getSelectedRow(), 0));
            txtMaNhanVien.setText(list.get(i).maNv);
            txtHoVaTen.setText(list.get(i).hoTen);
            txtTuoi.setText(list.get(i).tuoi + "");
            txtEmail.setText(list.get(i).email);
            txtLuong.setText(String.format("%.0f", list.get(i).luong));
            selectedImagePath = list.get(i).hinh;
            getSizeImage(selectedImagePath);
        } catch (Exception e) {
            System.out.println("Lỗi showDetail");
        }
    }

    private int checkIdgetPosition(String id) {
        for (int i = 0; i < list.size(); i++) {
            if (id.equalsIgnoreCase(list.get(i).getMaNv())) {
                return i;
            }
        }
        return -1;
    }

    private void addEmployee() {
        Employee emp = new Employee();
        emp.maNv = txtMaNhanVien.getText();
        emp.hoTen = txtHoVaTen.getText();
        emp.tuoi = Integer.parseInt(txtTuoi.getText());
        emp.email = txtEmail.getText();
        emp.luong = Double.parseDouble(txtLuong.getText());
        emp.hinh = selectedImagePath;
        list.add(emp);
    }

    private void updateEmployee() {
        int i = checkIdgetPosition((String) tblEmployee.getModel().getValueAt(tblEmployee.getSelectedRow(), 0));
        Employee emp = new Employee();
        emp.maNv = txtMaNhanVien.getText();
        emp.hoTen = txtHoVaTen.getText();
        emp.tuoi = Integer.parseInt(txtTuoi.getText());
        emp.email = txtEmail.getText();
        emp.luong = Double.parseDouble(txtLuong.getText());
        emp.hinh = selectedImagePath;
        list.set(i, emp);
    }

    private void removeEmployee() {
        int i = checkIdgetPosition((String) tblEmployee.getModel().getValueAt(tblEmployee.getSelectedRow(), 0));
        try {
            list.remove(i);
        } catch (Exception e) {
            System.out.println("Lỗi remove");
        }
    }

    private void updateStatusRecord() {
        try {
            int index = checkIdgetPosition((String) tblEmployee.getModel().getValueAt(tblEmployee.getSelectedRow(), 0));
            lbRecord.setText("Record: " + (index + 1) + " of " + list.size());
        }catch(Exception e){
            System.out.println("Lỗi updateStatusRecord");
        }
    }

    private boolean validationForm() {
        if (Validation.isEmpty(txtMaNhanVien, "Mã nhân viên không được rỗng")) {
            return false;
        }

        if (Validation.isEmpty(txtHoVaTen, "Họ và tên không được rỗng")) {
            return false;
        }

        if (Validation.isEmpty(txtTuoi, "Tuổi không được rỗng")) {
            return false;
        }

        if (!Validation.isNumber(txtTuoi, "Tuổi phải là số")) {
            return false;
        }

        if (!Validation.isBetween16And25(txtTuoi, "Tuổi phải là số từ 16 đến 55")) {
            return false;
        }

        if (Validation.isEmpty(txtEmail, "Email không được rỗng")) {
            return false;
        }

        if (!Validation.isNotEmail(txtEmail, "Email không đúng định dạng (vd: abc@gmail.com)")) {
            return false;
        }

        if (Validation.isEmpty(txtLuong, "Lương không được rỗng")) {
            return false;
        }

        if (!Validation.isNumber(txtLuong, "Lương phải là số")) {
            return false;
        }

        if (!Validation.isGreaterThan5Mili(txtLuong, "Lương phải trên 5 triệu")) {
            return false;
        }
        return true;
    }

    private boolean CheckMa() {
        String manvCur = txtMaNhanVien.getText();
        for (Employee item : list) {
            String ma = item.getMaNv();
            if (manvCur.equals(ma)) {
                JOptionPane.showMessageDialog(this, "Mã đã bị trùng! Vui lòng nhập mã khác");
                txtMaNhanVien.setBackground(Color.yellow);
                txtMaNhanVien.requestFocus(true);
                return true;
            }
        }
        return false;
    }

    public void SapXepTheoMaTangDan() {
        Comparator<Employee> com = new Comparator<Employee>() {
            @Override
            public int compare(Employee t, Employee t1) {
                return t.maNv.compareTo(t1.maNv);
            }
        };
        Collections.sort(list, com);
        fillToTable();
    }

    public void SapXepTheoTenTangDan() {
        Comparator<Employee> com = new Comparator<Employee>() {
            @Override
            public int compare(Employee t, Employee t1) {
                return t.hoTen.compareTo(t1.hoTen);
            }
        };
        Collections.sort(list, com);
        fillToTable();
    }

    public void SapXepTheoLuongTangDan() {
        Comparator<Employee> com = new Comparator<Employee>() {
            @Override
            public int compare(Employee t, Employee t1) {
                Double d = t.luong;
                Double d1 = t1.luong;
                return d.compareTo(d1);
            }

        };
        Collections.sort(list, com);
        fillToTable();
    }

    public void getSizeImage(String path) {
        ImageIcon ic = new ImageIcon(path);
        Image image = ic.getImage().getScaledInstance(lbImage.getWidth() - 5, lbImage.getHeight() - 5, Image.SCALE_SMOOTH);
        lbImage.setIcon(new ImageIcon(image));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGoFirst;
    private javax.swing.JButton btnGoLast;
    private javax.swing.JButton btnGoNext;
    private javax.swing.JButton btnGoPrevious;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSort;
    private javax.swing.JComboBox<String> cbbSort;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbHoVaTen;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbLuong;
    private javax.swing.JLabel lbLuong1;
    private javax.swing.JLabel lbMaNhanVien;
    private javax.swing.JLabel lbRecord;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbTuoi;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoVaTen;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            try {
                Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss a");
                String time = sdf.format(date.getTime());
                lbTime.setText(time);
                Thread.sleep(1000);
            } catch (Exception e) {
                break;
            }
        }
    }
}
